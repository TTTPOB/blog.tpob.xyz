<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TPOB&#39;s Dustbin</title>
    <link>https://blog.tpob.xyz/</link>
    <description>Recent content on TPOB&#39;s Dustbin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 14 Oct 2021 21:55:34 +0800</lastBuildDate>
    
        <atom:link href="https://blog.tpob.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>一些小脚本</title>
        <link>https://blog.tpob.xyz/2018/11/27/%E4%B8%80%E4%BA%9B%E5%B0%8F%E8%84%9A%E6%9C%AC/</link>
        <pubDate>Tue, 27 Nov 2018 22:41:37 +0000</pubDate>
        
        <guid>https://blog.tpob.xyz/2018/11/27/%E4%B8%80%E4%BA%9B%E5%B0%8F%E8%84%9A%E6%9C%AC/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2018/11/27/%E4%B8%80%E4%BA%9B%E5%B0%8F%E8%84%9A%E6%9C%AC/ -&lt;h1 id=&#34;一些小脚本&#34;&gt;一些小脚本&lt;/h1&gt;
&lt;p&gt;我老是会忘掉一些好用的脚本\命令\snippet，因为并不是很常用，本地存吧又会乱，OneNote因字体问题已然放弃，就扔在这里吧。出处的话，我也不能保证是原创啦，大概只能写上Google第一条结果（&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;删除path路径下所有失效软链接&#34;&gt;删除[PATH]路径下所有失效软链接&lt;/h2&gt;
&lt;h3 id=&#34;删除所有软链接&#34;&gt;删除所有软链接&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    find -type l -delete &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;PATH&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;删除所有失效软链接&#34;&gt;删除所有失效软链接&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    find -L &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;PATH&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -type l -delete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ldquo;-L&amp;quot;参数表示什么我没有看懂，原作者说是追踪软连接，&amp;ndash;help说是tree。有人知道评论告知，不胜感激。&lt;br&gt;
来源：&lt;a href=&#34;https://www.librehat.com/batch-delete-soft-links/&#34;&gt;Librehat的部落格&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;读取软链接下文件的真实位置&#34;&gt;读取软链接下文件的真实位置&lt;/h2&gt;
&lt;p&gt;使用readlink工具(自带)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;readlink -f &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;file_or_dir&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用英伟达独显的linux用户桌面出现撕裂&#34;&gt;使用英伟达独显的linux用户桌面出现撕裂&lt;/h2&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sleep 2s &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
export __GL_YIELD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;“USLEEP” &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; kwin_x11 --replace
&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;到启动脚本。
来源&lt;a href=&#34;https://forum.suse.org.cn/t/nvidia-geforce-gtx-1080/4652/13&#34;&gt;见此&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;sge集群使用qsub的查看自己限额&#34;&gt;SGE集群(使用qsub的)查看自己限额&lt;/h2&gt;
&lt;p&gt;这个跟不同集群设置也有关系的，可能不行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qconf -srqs quota_on_&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;队列名字&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; | grep &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;用户名&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装r包缺动态链接库&#34;&gt;安装R包缺动态链接库&lt;/h2&gt;
&lt;p&gt;参看&lt;a href=&#34;https://stackoverflow.com/questions/45112506/how-to-specify-non-r-library-path-for-dynamic-library-loading-in-r&#34;&gt;这个回答&lt;/a&gt;，核心就是手动指定动态链接库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;withr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;with_makevars&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(PKG_LIBS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-liconv&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;haven&amp;#34;&lt;/span&gt;), assignment&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+=&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装r包出现unable-to-load-shared-object--havenso-undefined-symbol-libiconv-error--错误&#34;&gt;安装R包出现unable to load shared object &amp;hellip;&amp;hellip; haven.so: undefined symbol: libiconv ERROR: &amp;hellip;&amp;hellip; 错误&lt;/h2&gt;
&lt;p&gt;参看&lt;a href=&#34;https://github.com/tidyverse/haven/issues/363&#34;&gt;haven的issue&lt;/a&gt;，安装时使用withr::with_makevars(c(PKG_LIBS = &amp;ldquo;-liconv&amp;rdquo;), install.packages(&amp;ldquo;haven&amp;rdquo;), assignment = &amp;ldquo;+=&amp;quot;)即可。其它类似报错也可如法炮制。&lt;/p&gt;
&lt;h2 id=&#34;各种依赖ncurses的程序报缺so文件libncursesso6-libtinfoso6-之类&#34;&gt;各种依赖ncurses的程序报缺so文件（libncurses.so.6, libtinfo.so.6 之类）&lt;/h2&gt;
&lt;p&gt;编译安装ncurses，configure时加上参数&lt;code&gt;--with-shared&lt;/code&gt; (用于产生动态链接库) &lt;code&gt;--with-termlib&lt;/code&gt; (用于产生单独的libtinfo.so.*)。&lt;/p&gt;
&lt;p&gt;如果已经使用包管理器安装，则将&lt;code&gt;libncurses.so&lt;/code&gt;链接到同目录下的&lt;code&gt;libtinfo.so.[number_needed]&lt;/code&gt;即可。&lt;/p&gt;
&lt;h2 id=&#34;manjaro其他使用timedatectl控制时间的系统与windows时间保持一致&#34;&gt;Manjaro/其他使用timedatectl控制时间的系统与Windows时间保持一致&lt;/h2&gt;
&lt;p&gt;以下内容抄自&lt;a href=&#34;http://abcdxyzk.github.io/blog/2016/01/06/system-base-time/&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系统启动和关闭时，硬件时间与系统时间之间的同步有两种方式(假设在中国，用CST代表本地时间)：
方式A: 使用UTC（对linux就是 /etc/sysconfig/clock 中 UTC=true）
开机: BIOS -&amp;gt; UTC（将BIOS中的时间看成是UTC） -&amp;gt; (时区变化) –&amp;gt;CST
关机: CST -&amp;gt; (时区变化) -&amp;gt; UTC -&amp;gt; 存储到 -&amp;gt; BIOS&lt;/p&gt;
&lt;p&gt;方式B: 不使用UTC（对linux就是 /etc/sysconfig/clock 中 UTC=false）
开机: BIOS -&amp;gt; CST（将BIOS中的时间看成是CST）
关机: CST -&amp;gt; 存储到-&amp;gt; BIOS&lt;/p&gt;
&lt;p&gt;FIX:&lt;/p&gt;
&lt;p&gt;方式A: 使用UTC（对linux就是 /etc/sysconfig/clock 中 UTC=true）
关机: CST -&amp;gt; 操作系统根据时区算出UTC时间 -&amp;gt; 存储到 -&amp;gt; &amp;gt;BIOS
开机: BIOS -&amp;gt; BIOS中的时间是UTC -&amp;gt; 操作系统根据时区计算出localtime -&amp;gt; CST&lt;/p&gt;
&lt;p&gt;方式B: 不使用UTC（对linux就是 /etc/sysconfig/clock 中 UTC=false）
关机: CST -&amp;gt; 操作系统中UTC=false，直接将localtime存储到 -&amp;gt; BIOS
开机: BIOS -&amp;gt; BIOS中的时间是localtime -&amp;gt; 操作系统中UTC=false，BIOS时间当成localtime -&amp;gt; CST（将BIOS中的时间看成是CST）&lt;/p&gt;
&lt;p&gt;通过设定 /etc/sysconfig/clock，linux可以支持这两种方式，然而windows只支持方式B（至少是默认支持B，而我不知道怎么能让它支 持A），那么在双系统情况下，如果linux设成A方式，那么在linux与windows系统切换时一定会造成时间混乱的，解决办法就是将linux中 的UTC禁用，也设成B方式就可以了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;具体到我们的情况呢，就是需要&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo timedatectl set-local-rtc true
sudo ntpdate cn.pool.ntp.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（注意timedatectl设置的是rtc，上文提到的是utc，所以是反的）&lt;/p&gt;
&lt;h2 id=&#34;windows-拿回edge-chromiumchrome浏览器的叠加层滚动条自动隐藏滚动条overlay-scrollbar&#34;&gt;Windows: 拿回edge chromium/chrome浏览器的叠加层滚动条/自动隐藏滚动条/Overlay Scrollbar&lt;/h2&gt;
&lt;p&gt;很久以前我们是可以在&lt;code&gt;chrome://flags&lt;/code&gt;里面把overlay scrollbar打开的，不知道为什么chromium脑子抽了要把这个删掉，现在想要启用就需要在快捷方式后面加上&lt;code&gt;--enable-features=OverlayScrollbar&lt;/code&gt;的启动参数，改完之后大概长这样&lt;code&gt;&amp;quot;C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe&amp;quot; --enable-features=OverlayScrollbar&lt;/code&gt;,这样可以让你从这个快捷方式启动的edge带上overlay scrollbar特性，所以你可能需要在桌面/开始菜单/任务栏固定(在这里&lt;code&gt;%APPDATA%\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar&lt;/code&gt;)的edge快捷方式后面都加上它。&lt;/p&gt;
&lt;p&gt;但这样不能让你点别人发过来的链接打开的edge也带上overlay scrollbar特性，做到这个需要打开注册表编辑器，&lt;code&gt;win&lt;/code&gt;+&lt;code&gt;r&lt;/code&gt;键输入&lt;code&gt;regedit&lt;/code&gt;，去到&lt;code&gt;HKEY_CLASSES_ROOT\MSEdgeHTM\shell&lt;/code&gt;，把&lt;code&gt;shell&lt;/code&gt;和&lt;code&gt;runas&lt;/code&gt;两项下的&lt;code&gt;command&lt;/code&gt;中的&lt;code&gt;默认&lt;/code&gt;值后面都加上&lt;code&gt;--enable-features=OverlayScrollbar&lt;/code&gt;(记得写在那个什么&lt;code&gt;single-argument&lt;/code&gt;前面)。这样应该就好啦。&lt;/p&gt;
&lt;p&gt;最后，最新的edge更新会让edge开机不带参数自启并且常驻后台，后续启动的edge都将直接从这个后台进程启动于是也不带参数，这样要么你帮我找到应该在哪里改自启参数，要么关掉这个后台feature，要么就每次开机打开edge点一下右上角菜单的&lt;code&gt;关闭Microsoft Edge&lt;/code&gt;。我采用的是第三个方法。&lt;/p&gt;
&lt;h2 id=&#34;windows-卸载onedrive-for-business后删除资源管理器左侧固定的onedrive-for-business项&#34;&gt;Windows: 卸载OneDrive for Business后删除资源管理器左侧固定的OneDrive for Business项&lt;/h2&gt;
&lt;p&gt;打开注册表编辑器，定位到路径&lt;code&gt;HKEY_CLASSES_ROOT\CLSID\\{3BA2E6B1-A6A1-CCF6-942C-D370B14D842B}&lt;/code&gt;找到ShellFolder下的Attributes文件，把它的键值改成f090004d，然后重启资源管理器。
来源：&lt;a href=&#34;https://answers.microsoft.com/zh-hans/msoffice/forum/all/onedrive-for-business/df7a5174-c253-401d-b909-6419ed6c1bc9&#34;&gt;Windows支持社区&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;windows-将用notepad2打开添加到windows右键菜单&#34;&gt;Windows: 将“用Notepad2打开”添加到Windows右键菜单&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-registry&#34; data-lang=&#34;registry&#34;&gt;Windows Registry Editor Version 5.00
&lt;span style=&#34;color:#66d9ef&#34;&gt;[&lt;/span&gt;HKEY_CLASSES_ROOT&lt;span style=&#34;color:#66d9ef&#34;&gt;\*\shell\Edit with Notepad2]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;[&lt;/span&gt;HKEY_CLASSES_ROOT&lt;span style=&#34;color:#66d9ef&#34;&gt;\*\shell\Edit with Notepad2\command]&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\&amp;#34;C:\\Program Files\\Notepad2\\Notepad2.exe\&amp;#34; \&amp;#34;%1\&amp;#34;&amp;#34;&lt;/span&gt;
Windows Registry Editor Version 5.00

&lt;span style=&#34;color:#66d9ef&#34;&gt;[&lt;/span&gt;HKEY_CLASSES_ROOT&lt;span style=&#34;color:#66d9ef&#34;&gt;\*\shell\Edit with Notepad2]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;[&lt;/span&gt;HKEY_CLASSES_ROOT&lt;span style=&#34;color:#66d9ef&#34;&gt;\*\shell\Edit with Notepad2\command]&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\&amp;#34;C:\\Program Files\\Notepad2\\Notepad2.exe\&amp;#34; \&amp;#34;%1\&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;windows-windows中许多程序默认字体为宋体&#34;&gt;Windows: Windows中许多程序默认字体为宋体&lt;/h2&gt;
&lt;p&gt;参看&lt;a href=&#34;http://www.qtcn.org/bbs/read-htm-tid-21367.html&#34;&gt;这个链接&lt;/a&gt;，修改注册表解决。将&lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\GRE_Initialize&lt;/code&gt;中的&lt;code&gt;GUIFont.Facename&lt;/code&gt;改成自己喜欢的即可，我使用的是&lt;code&gt;Sarasa UI SC&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;windows-windows无法正常休眠&#34;&gt;Windows: Windows无法正常休眠&lt;/h2&gt;
&lt;p&gt;参看&lt;a href=&#34;http://m.newsmth.net/article/WindowsTech/single/30724/0&#34;&gt;这个链接&lt;/a&gt;, 他好像也是转的，但是我也找不到原始出处了。
解决方法就是用whatever什么软件把efi分区的“类型GUID”改成&lt;code&gt;c12a7328-f81f-11d2-ba4b-00a0c93ec93b&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;windows-提取保存过的remote-desktop密码&#34;&gt;Windows: 提取保存过的Remote Desktop密码&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nirsoft.net/utils/credentials_file_view.html&#34;&gt;这个软件(CredentialsFileView)&lt;/a&gt;可以解决问题。可以输入密码或者授予管理员权限来完成操作。实际上，不仅仅是远程桌面的密码可以提取，&lt;code&gt;SMB&lt;/code&gt;的密码也是可以的(只要是会产生&lt;code&gt;Credential File&lt;/code&gt;的都可以)。&lt;/p&gt;
&lt;h2 id=&#34;windowslinux--文献管理软件mendeley在高分屏上缩放异常&#34;&gt;Windows\Linux:  文献管理软件Mendeley在高分屏上缩放异常&lt;/h2&gt;
&lt;p&gt;查看安装完的目录发现这个垃圾软件是qt写的。参考&lt;a href=&#34;https://doc.qt.io/qt-5/highdpi.html&#34;&gt;这个链接&lt;/a&gt;, 文档中提到了几种qt程序支持HiDPI的办法，用户层面能解决的就是添加&lt;code&gt;QT_AUTO_SCREEN_SCALE_FACTOR&lt;/code&gt;环境变量，值设置为1，重启电脑就好啦。win10方便添加环境变量的办法是任务栏搜索框输入&lt;code&gt;path&lt;/code&gt; &amp;mdash; 编辑系统的环境变量 &amp;mdash; 弹出窗口点环境变量 &amp;mdash; 上方的用户变量点新建，变量名输入&lt;code&gt;QT_AUTO_SCREEN_SCALE_FACTOR&lt;/code&gt;，变量值输入&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Linux&amp;hellip;用Linux当桌面系统的肯定知道怎么加环境变量。&lt;/p&gt;
&lt;p&gt;更新：我发现这样调整完，mendeley自带的pdf阅读器会出问题出被截断。&lt;img src=&#34;https://tvax4.sinaimg.cn/large/6e173d3cly1ga7sisn2etj22yo1l1n46.jpg&#34; alt=&#34;问题图&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;在nvme硬盘上安装linuxwindows双系统遇到grub-probe报错&#34;&gt;在NVME硬盘上安装linux/Windows双系统遇到grub-probe报错&lt;/h2&gt;
&lt;p&gt;网上的大部分教程会让你使用这样一个命令来得到custom.cfg
&lt;code&gt;sudo grub-probe --target=fs_uuid /boot/efi/EFI/Microsoft/Boot/bootmgfw.efi&lt;/code&gt;. 然而会返回报错&lt;code&gt;grub-probe: warning: unknown device type nvme0n1.&lt;/code&gt;
我查了一堆解决办法，有说用os-prober的（测试无效）、有说禁用memtest的（测试无效）。最后照着wiki的抄了手动改了uuid和hints string。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新: 刚刚重新os-prober又有效了，并不知道为什么&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo pacman -S os-prober
sudo os-prober
sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下是原来的代码，不看也罢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ &amp;quot;${grub_platform}&amp;quot; == &amp;quot;efi&amp;quot; ]; then
    menuentry &amp;quot;Windows 10&amp;quot; {
        fs_uuid=CEC0-7D1B (note 1)
        hints_string=--hint-bios,gpt1 --hint-efi=hd0,gpt1 --hint-baremetal=achi0,gpt1 (note 2)
        insmod part_gpt
        insmod fat
        insmod search_fs_uuid
        insmod chain
        search --fs-uuid --set=root $hints_string $fs_uuid
        chainloader /EFI/Microsoft/Boot/bootmgfw.efi
    }
fi
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;note 1: 此处替换为&lt;code&gt;sudo grub-probe --target=fs_uuid /boot/efi/EFI/Microsoft/Boot/bootmgfw.efi&lt;/code&gt;的结果&lt;/li&gt;
&lt;li&gt;note 2: 此处的&lt;code&gt;hdxx&lt;/code&gt;和&lt;code&gt;achi&lt;/code&gt;，进入BIOS，找到一个能显示出所有硬盘的界面，你装Windows的盘在第几个就是几减一。
&lt;em&gt;更新：刚刚测试貌似填几都行。然后根据&lt;a href=&#34;https://blog.nokky.net/2018/01/31/archlinux-install/&#34;&gt;这个博主&lt;/a&gt;说gpt后面也是填什么都行&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sed处理换行符&#34;&gt;sed处理换行符&lt;/h2&gt;
&lt;p&gt;本来由于sed是按行处理文本文件的所以并没有办法替换换行符，但是利用一些特殊的方法可以处理。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:a;N;s/\n//g;ta&amp;#34;&lt;/span&gt; a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u011729865/article/details/71773840&#34;&gt;来源&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;linux某一个分区中的文件即使有执行权限也不能被执行&#34;&gt;Linux某一个分区中的文件即使有执行权限也不能被执行&lt;/h2&gt;
&lt;p&gt;检查&lt;code&gt;/etc/fatab&lt;/code&gt;文件，查看这个分区的挂载属性中是否含有&lt;code&gt;noexec&lt;/code&gt;。如果有，改为&lt;code&gt;exec&lt;/code&gt;即可。&lt;/p&gt;
&lt;h2 id=&#34;丢人git-clone不带submodule&#34;&gt;丢人：git clone不带submodule&lt;/h2&gt;
&lt;p&gt;加上 &lt;code&gt;--recursive&lt;/code&gt;&lt;/p&gt;
- https://blog.tpob.xyz/2018/11/27/%E4%B8%80%E4%BA%9B%E5%B0%8F%E8%84%9A%E6%9C%AC/ - </description>
        </item>
    
    
    
        <item>
        <title>更快获得srr accession</title>
        <link>https://blog.tpob.xyz/2021/10/14/%E6%9B%B4%E5%BF%AB%E8%8E%B7%E5%BE%97srr-accession/</link>
        <pubDate>Thu, 14 Oct 2021 21:55:34 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2021/10/14/%E6%9B%B4%E5%BF%AB%E8%8E%B7%E5%BE%97srr-accession/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2021/10/14/%E6%9B%B4%E5%BF%AB%E8%8E%B7%E5%BE%97srr-accession/ -&lt;p&gt;上次我们在摸鱼的时候写了&lt;a href=&#34;https://blog.tpob.xyz/2021/03/24/%E6%9B%B4%E5%BF%AB%E4%B8%8B%E8%BD%BDsra%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84fastq.gz%E6%96%87%E4%BB%B6/&#34;&gt;一个jio本&lt;/a&gt;来帮助我们从srr直接下载fastq.gz，但问题来了怎么快速拿到srr呢？有的时候(很多时候)NCBI自己的SRA Run Selector并不好用，并且我可能只是想下一个GSM样本对应的所有sra文件而已，这个时候在页面上点来点去就很麻烦，下下来之后还要自己对着网页重命名，眼睛都要瞎了，所以我今天又在摸鱼的时候写了另一个jio本，&lt;a href=&#34;https://gist.github.com/TTTPOB/983ec24cf42a01b7802098ee6f117494&#34;&gt;gist链接&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;上次我是想着为了尽量减少依赖就全用的标准库，requests都没用，直接用裸的urllib3写的，非常费劲，这次我决定节约一下我的大脑直接用&lt;code&gt;httpx&lt;/code&gt;，&lt;code&gt;BeautifoulSoup4&lt;/code&gt;，&lt;code&gt;click&lt;/code&gt;，《非常现代》。&lt;/p&gt;
&lt;p&gt;大概的用法我相信能看到这个文章的人可以自己明白，比如你有一个gsm号码&lt;code&gt;GSM1111111&lt;/code&gt;，你就&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#改名字，加PATH应该没有不会的吧（&lt;/span&gt;
get_srr gsm2srr GSM1111111 &amp;gt; GSM1111111.srr
srr2fqgz GSM1111111.srr &amp;gt; GSM1111111.srr_linklist
&lt;span style=&#34;color:#75715e&#34;&gt;#aria2c下下来，wget啥的都行&lt;/span&gt;
aria2c -i GSM1111111.srr_linklist
&lt;span style=&#34;color:#75715e&#34;&gt;#记得校验&lt;/span&gt;
gzip -vt *gz

&lt;span style=&#34;color:#75715e&#34;&gt;#或许你还想把不同run的数据拼到一起&lt;/span&gt;
yes _1.fastq.gz|head -n &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;wc -l GSM1111111.srr&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
tr &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; _1 &amp;gt; _2
&lt;span style=&#34;color:#75715e&#34;&gt;# 直接用sed更简单&lt;/span&gt;
paste GSM1111111.srr _1 -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; | xargs cat  &amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;samplename&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;_R1.fastq.gz 
paste GSM1111111.srr _2 -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; | xargs cat  &amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;samplename&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;_R2.fastq.gz 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令就可以获得GSM1111111对应的所有srr，然后你就可以用&lt;code&gt;cat GSM1111111.srr&lt;/code&gt;来获得所有srr，然后用&lt;code&gt;srr2fqgz&lt;/code&gt;拿到地址，然后就&lt;code&gt;aria2c&lt;/code&gt;一把梭，记得校验一下完整性。&lt;/p&gt;
&lt;p&gt;然后我在这里安利一下&lt;code&gt;click&lt;/code&gt;，&lt;a href=&#34;https://click.palletsprojects.com/&#34;&gt;官网在这&lt;/a&gt;，相当好用，完全不需要大脑，比&lt;code&gt;argparse&lt;/code&gt;好用一万倍。&lt;/p&gt;
&lt;p&gt;好了水完了。&lt;/p&gt;
- https://blog.tpob.xyz/2021/10/14/%E6%9B%B4%E5%BF%AB%E8%8E%B7%E5%BE%97srr-accession/ - </description>
        </item>
    
    
    
        <item>
        <title>一台机器上有好几套conda怎么办</title>
        <link>https://blog.tpob.xyz/2021/10/07/%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8%E4%B8%8A%E6%9C%89%E5%A5%BD%E5%87%A0%E5%A5%97conda%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
        <pubDate>Thu, 07 Oct 2021 18:43:09 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2021/10/07/%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8%E4%B8%8A%E6%9C%89%E5%A5%BD%E5%87%A0%E5%A5%97conda%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2021/10/07/%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8%E4%B8%8A%E6%9C%89%E5%A5%BD%E5%87%A0%E5%A5%97conda%E6%80%8E%E4%B9%88%E5%8A%9E/ -&lt;p&gt;其实这一篇也很水，可是又好几个月不更新了我能怎么办呢&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;故事是这样的：&lt;/p&gt;
&lt;p&gt;我们实验室用在我来之前就用&lt;a href=&#34;https://docs.conda.io/projects/conda/en/latest/user-guide/configuration/admin-multi-user-install.html&#34;&gt;全局安装&lt;/a&gt;的办法装了一套公用的conda，可是我当时没有管理员权限，不好换mamba或者进行类似的操作，所以用起来很难受，所以我就往自己的&lt;code&gt;$HOME&lt;/code&gt;里装了自己的&lt;code&gt;miniconda&lt;/code&gt;，但是给其它同学debug的时候经常要回到系统自带的conda环境里面，我就很烦，前两天就往自己的&lt;code&gt;.zshrc&lt;/code&gt;里面写了个：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; use_system_conda&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
  __conda_setup&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/lab_public/shared/applications/conda/miniconda3/bin/conda&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shell.bash&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; 2&amp;gt; /dev/null&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$__conda_setup&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/lab_public/shared/applications/conda/miniconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
          . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/lab_public/shared/applications/conda/miniconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
          export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/lab_public/shared/applications/conda/miniconda3/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  unset __conda_setup
  export WHICH_CONDA__&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;system conda&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; use_own_conda&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
  __conda_setup&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/my_user_name/anaconda/bin/conda&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shell.zsh&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; 2&amp;gt; /dev/null&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$__conda_setup&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/my_user_name/anaconda/etc/profile.d/conda.sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
          . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/my_user_name/anaconda/etc/profile.d/conda.sh&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
          export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/my_user_name/anaconda/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  unset __conda_setup
  export WHICH_CONDA__&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;own conda&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

use_own_conda

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; get_which_conda&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
    echo $WHICH_CONDA__
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

PROMPT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%F{blue}(\$(get_which_conda))%f&lt;/span&gt;$PROMPT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就方便多了，我想用自己的conda就&lt;code&gt;use_own_conda&lt;/code&gt;(默认)想用系统的conda就&lt;code&gt;use_system_conda&lt;/code&gt;，最后面一行还往prompt里面加了个提示提醒我用的是哪一个(是的我今天用错了才加的)，如果有使用&lt;code&gt;bash&lt;/code&gt;的同学想抄作业记得改一下设置prompt的操作，这个是&lt;code&gt;zsh&lt;/code&gt; only的，它设置颜色什么的要方便一些。&lt;/p&gt;
&lt;p&gt;效果嘛&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20211007191250.png&#34; alt=&#34;效果图&#34;&gt;&lt;/p&gt;
- https://blog.tpob.xyz/2021/10/07/%E4%B8%80%E5%8F%B0%E6%9C%BA%E5%99%A8%E4%B8%8A%E6%9C%89%E5%A5%BD%E5%87%A0%E5%A5%97conda%E6%80%8E%E4%B9%88%E5%8A%9E/ - </description>
        </item>
    
    
    
        <item>
        <title>有一些人他会犯一些很愚蠢的错误-1</title>
        <link>https://blog.tpob.xyz/2021/05/21/%E6%9C%89%E4%B8%80%E4%BA%9B%E4%BA%BA%E4%BB%96%E4%BC%9A%E7%8A%AF%E4%B8%80%E4%BA%9B%E5%BE%88%E6%84%9A%E8%A0%A2%E7%9A%84%E9%94%99%E8%AF%AF-1/</link>
        <pubDate>Fri, 21 May 2021 19:37:00 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2021/05/21/%E6%9C%89%E4%B8%80%E4%BA%9B%E4%BA%BA%E4%BB%96%E4%BC%9A%E7%8A%AF%E4%B8%80%E4%BA%9B%E5%BE%88%E6%84%9A%E8%A0%A2%E7%9A%84%E9%94%99%E8%AF%AF-1/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2021/05/21/%E6%9C%89%E4%B8%80%E4%BA%9B%E4%BA%BA%E4%BB%96%E4%BC%9A%E7%8A%AF%E4%B8%80%E4%BA%9B%E5%BE%88%E6%84%9A%E8%A0%A2%E7%9A%84%E9%94%99%E8%AF%AF-1/ -&lt;p&gt;唉有的人吧屁事不干文章也不想看，就想水。但是呢他又很菜没什么可以水的，而且每天还犯一堆错误；那既然如此为什么不开一个贴子记下来呢（&lt;/p&gt;
&lt;h2 id=&#34;20210521-这人bowtie2-index格式都可以记错&#34;&gt;2021.05.21 这人bowtie2 index格式都可以记错&lt;/h2&gt;
&lt;p&gt;嗯是的我知道这里不应该有&lt;code&gt;.fa&lt;/code&gt;，但我居然排除了一下午。&lt;/p&gt;
&lt;p&gt;以及我强烈谴责写脚本碰到异常不退出的行为，我翻日志都不知道哪里错的（&lt;/p&gt;
&lt;p&gt;为了其它找不到问题在哪里的人说不定可以搜到这个文章我把可能会搜索的东西放在这里
&lt;code&gt;(FILE LOCATION) does not exist or is not a Bowtie 2 index&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20210521194119.png&#34; alt=&#34;脚本里的路径&#34;&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20210521194231.png&#34; alt=&#34;这个目录里面的东西&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;20210601-这人之前说ebincbi的测序数据没给checksum不能验证完整性&#34;&gt;2021.06.01 这人之前说ebi/ncbi的测序数据没给checksum不能验证完整性&lt;/h2&gt;
&lt;p&gt;万一有人记得我写过一个&lt;a href=&#34;https://blog.tpob.xyz/2021/03/24/%E6%9B%B4%E5%BF%AB%E4%B8%8B%E8%BD%BDsra%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84fastq.gz%E6%96%87%E4%BB%B6/&#34;&gt;特小脚本&lt;/a&gt;来从ebi直接下&lt;code&gt;fastq.gz&lt;/code&gt;数据以免被&lt;code&gt;sratoolkit&lt;/code&gt;慢死。&lt;/p&gt;
&lt;p&gt;但是这样不带checksum下下来文件损坏也不知道，心里很慌，所以我到处喷ncbi/ebi的ftp站点不给文件放checksum，今天把一个巨大的&lt;code&gt;fastq.gz&lt;/code&gt;文件扔进pipeline里面之后才知道是损坏的，非常浪费时间。&lt;/p&gt;
&lt;p&gt;但实际上&lt;code&gt;gzip&lt;/code&gt;文件内部是自带有checksum的，虽然是比较弱的&lt;code&gt;CRC32&lt;/code&gt;但是也可以基本保证正确性了，使用也非常简单，只需要&lt;code&gt;gzip -v -t theFile.gz&lt;/code&gt;就可以了。结果大概长这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20210601203859.png&#34; alt=&#34;结果的样子&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然啦，嫌慢的话总可以用神奇的&lt;code&gt;parallel&lt;/code&gt;：&lt;code&gt;ls *gz|parallel -j4 gzip -v -t {}&lt;/code&gt;(当心线程太多把服务器io卡爆)。&lt;/p&gt;
&lt;p&gt;搜索关键词：gzip checksum ncbi ebi sra fastq 数据完整性校验&lt;/p&gt;
&lt;h2 id=&#34;20210615-他被jupyter-irkernel不该输出的图片折磨了一天然后发现很简单可以关掉&#34;&gt;2021.06.15 他被jupyter IRKernel不该输出的图片折磨了一天然后发现很简单可以关掉&lt;/h2&gt;
&lt;p&gt;有的时候你被迫使用&lt;code&gt;base r&lt;/code&gt;的绘图工具进行画图，比如很简单的画一个density，但如果你在对一个循环/&lt;code&gt;lapply&lt;/code&gt;做这件事，那你会被输出的图片占满整个屏幕，太长了滚动起来也不方便；即使你使用&lt;code&gt;grid.echo();p1&amp;lt;-grid.grab()%&amp;gt;%as.ggplot()&lt;/code&gt;来保存了这张图片（转换成ggplot对象），但画图的时候还是不可避免地会输出在cell的output里，即使你使用了&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/invisible&#34;&gt;invisible&lt;/a&gt;（很好理解，它只是不让对象显示，但&lt;code&gt;plot&lt;/code&gt;也不是这样显示出来的）。但我刚刚突然想到我直接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(grid)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(gridGraphics)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplotify)

&lt;span style=&#34;color:#75715e&#34;&gt;## 我直接在这里把结果输出到null设备不就好了吗&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;pdf&lt;/span&gt;(file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/dev/null&amp;#34;&lt;/span&gt;,w&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,h&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;plot&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;grid.echo&lt;/span&gt;()
p1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;grid.grab&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;as.ggplot
&lt;span style=&#34;color:#a6e22e&#34;&gt;dev.off&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我直接把结果输出到&lt;code&gt;/dev/null&lt;/code&gt;不就好了吗！
（突然觉得我是不是应该用&lt;code&gt;jupyter&lt;/code&gt;写blog，反正也是markdown）&lt;/p&gt;
- https://blog.tpob.xyz/2021/05/21/%E6%9C%89%E4%B8%80%E4%BA%9B%E4%BA%BA%E4%BB%96%E4%BC%9A%E7%8A%AF%E4%B8%80%E4%BA%9B%E5%BE%88%E6%84%9A%E8%A0%A2%E7%9A%84%E9%94%99%E8%AF%AF-1/ - </description>
        </item>
    
    
    
        <item>
        <title>命令行markdown渲染工具glow</title>
        <link>https://blog.tpob.xyz/2021/04/28/%E5%91%BD%E4%BB%A4%E8%A1%8Cmarkdown%E6%B8%B2%E6%9F%93%E5%B7%A5%E5%85%B7glow/</link>
        <pubDate>Wed, 28 Apr 2021 20:18:40 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2021/04/28/%E5%91%BD%E4%BB%A4%E8%A1%8Cmarkdown%E6%B8%B2%E6%9F%93%E5%B7%A5%E5%85%B7glow/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2021/04/28/%E5%91%BD%E4%BB%A4%E8%A1%8Cmarkdown%E6%B8%B2%E6%9F%93%E5%B7%A5%E5%85%B7glow/ -&lt;p&gt;唉这个实在是太水了但是由于我觉得可以借机宣扬一下在服务器的每个文件夹都放一个&lt;code&gt;README.md&lt;/code&gt;所以我还是写一个（&lt;/p&gt;
&lt;p&gt;总之就是今天整理师姐留下来的一个文件夹发现她的数据位置啊，来源啊，要用到的工具啊，什么都没写，这样就很麻烦很不好用（嗯虽然其实我经常也不写）。&lt;/p&gt;
&lt;p&gt;但是呢如果你直接写一个markdown又会很难看比如长成这样 &lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20210428202738.png&#34; alt=&#34;plain text markdown&#34;&gt;，这样怎么说呢，丑不说，也不便于突出重点。&lt;/p&gt;
&lt;h3 id=&#34;立刻使用-glowhttpsgithubcomcharmbraceletglow&#34;&gt;立刻使用 &lt;a href=&#34;https://github.com/charmbracelet/glow&#34;&gt;glow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;然后我一搜&lt;code&gt;cli markdown render&lt;/code&gt;就找到&lt;a href=&#34;https://github.com/charmbracelet/glow&#34;&gt;glow&lt;/a&gt;，去release下好之后用一下大概就是长这样 &lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20210428203118.png&#34; alt=&#34;prettier markdown&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样看起来还是舒服多了，自己写起来动力也稍微足一点毕竟稍微好看那么一些。&lt;/p&gt;
&lt;p&gt;这工具还有tui模式，如果你的文档实在是太长了想必是用得上的。（直接&lt;code&gt;glow xx.md | less&lt;/code&gt;是不行的，因为less显然没有办法显示这样的样式）&lt;/p&gt;
&lt;p&gt;好了我水完了，希望大家养成整理文件和说明的好习惯。&lt;/p&gt;
- https://blog.tpob.xyz/2021/04/28/%E5%91%BD%E4%BB%A4%E8%A1%8Cmarkdown%E6%B8%B2%E6%9F%93%E5%B7%A5%E5%85%B7glow/ - </description>
        </item>
    
    
    
        <item>
        <title>更快下载sra数据库中的fastq.gz文件</title>
        <link>https://blog.tpob.xyz/2021/03/24/%E6%9B%B4%E5%BF%AB%E4%B8%8B%E8%BD%BDsra%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84fastq.gz%E6%96%87%E4%BB%B6/</link>
        <pubDate>Wed, 24 Mar 2021 14:36:15 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2021/03/24/%E6%9B%B4%E5%BF%AB%E4%B8%8B%E8%BD%BDsra%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84fastq.gz%E6%96%87%E4%BB%B6/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2021/03/24/%E6%9B%B4%E5%BF%AB%E4%B8%8B%E8%BD%BDsra%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84fastq.gz%E6%96%87%E4%BB%B6/ -&lt;p&gt;啊狗屎ncbi的sra数据每次都要&lt;code&gt;prefetch&lt;/code&gt;下下来再&lt;code&gt;fastq-dump&lt;/code&gt;/&lt;code&gt;fasterq-dump&lt;/code&gt;，真的是气死我了，prefetch还是单线程，在众所周知的网络环境下面的速度一言难尽&amp;hellip;&lt;/p&gt;
&lt;p&gt;好在ebi数据库不仅与ncbi同步更新而且还直接给了&lt;code&gt;fastq.gz&lt;/code&gt;的下载链接，甚至有给你json api来根据&lt;code&gt;accession number&lt;/code&gt;获取，所以我们可以有如下的操作。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;打开你需要的GSE页面进入&lt;code&gt;SRA RUN Selector&lt;/code&gt;，下下来之后里面应该长这样&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat example.list

SRR000999
SRR000998
SRR000997
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我们使用&lt;a href=&#34;https://gist.github.com/TTTPOB/9c52a1ebd10ee7383bda245663e252a0&#34;&gt;临时摸出来的这个脚本&lt;/a&gt; &lt;code&gt;srr2fqgz.py&lt;/code&gt;，和parallel，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat example.list|parallel SRR2fqgz.py | parallel aria2c -x16 -s16 &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它应该就可以下好了&lt;/p&gt;
- https://blog.tpob.xyz/2021/03/24/%E6%9B%B4%E5%BF%AB%E4%B8%8B%E8%BD%BDsra%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84fastq.gz%E6%96%87%E4%BB%B6/ - </description>
        </item>
    
    
    
        <item>
        <title>在WSL2上修好到服务器的X11转发</title>
        <link>https://blog.tpob.xyz/2020/12/11/%E5%9C%A8wsl2%E4%B8%8A%E4%BF%AE%E5%A5%BD%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84x11%E8%BD%AC%E5%8F%91/</link>
        <pubDate>Fri, 11 Dec 2020 13:41:33 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2020/12/11/%E5%9C%A8wsl2%E4%B8%8A%E4%BF%AE%E5%A5%BD%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84x11%E8%BD%AC%E5%8F%91/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2020/12/11/%E5%9C%A8wsl2%E4%B8%8A%E4%BF%AE%E5%A5%BD%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84x11%E8%BD%AC%E5%8F%91/ -&lt;p&gt;大约一年以前我从&lt;code&gt;WSL1&lt;/code&gt;“升级”到&lt;code&gt;WSL2&lt;/code&gt;，首先遇到的问题是以前常用的在Windows上跑一个x服务器然后用x11监听到wsl里来用图形软件的做法似乎不能用了：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Error: Can&#39;t open display: localhost:10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果有人需要解释为什么是&lt;code&gt;localhost:10&lt;/code&gt;而不是&lt;code&gt;:10&lt;/code&gt;那你可以先去查一查(&lt;/p&gt;
&lt;p&gt;解决办法比较简单，是把&lt;code&gt;localhost:10&lt;/code&gt;换成&lt;code&gt;$WINDOWS_IP:10&lt;/code&gt;当然这个10可以是你想要的任何端口号。（我保持这个状态到了今天）&lt;/p&gt;
&lt;p&gt;&lt;del&gt;心情好的话我改天更新一下把涉及到的所有奇怪操作都写一下免得你们还要去别处查&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;但当你这样弄完之后你会发现你SSH到实验室服务器的时候会&lt;code&gt;Warning: untrusted X11 forwarding setup failed: xauth key data not generated&lt;/code&gt;，并且确实无法使用服务器的X11软件，即使&lt;code&gt;ssh -Y&lt;/code&gt;也不行。&lt;/p&gt;
&lt;p&gt;那我只能&lt;code&gt;ssh -vvv&lt;/code&gt;看看出了什么事，发现卡在这里：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug2: client_x11_get_proto: xauth command: /usr/sbin/xauth -f /tmp/ssh-V0tly0ULHMm2/xauthfile generate 172.26.112.1:10 MIT-MAGIC-COOKIE-1 untrusted timeout 1260 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;172.26.112.1:10&lt;/code&gt;是我刚刚设置的&lt;code&gt;$WINDOWS_IP:10&lt;/code&gt;，所以似乎&amp;hellip;&lt;code&gt;xauth&lt;/code&gt;没有办法在target不在本机的时候进行认证？看起来好像是这样，但我们又不能设置到&lt;code&gt;WSL2&lt;/code&gt;的&lt;code&gt;localhost&lt;/code&gt;这样windows上的x服务器认不到端口&amp;hellip;&lt;/p&gt;
&lt;p&gt;但是&lt;/p&gt;
&lt;p&gt;我们&lt;/p&gt;
&lt;p&gt;可以用&lt;/p&gt;
&lt;p&gt;端口转发&lt;/p&gt;
&lt;p&gt;去nmdX11转发&lt;/p&gt;
&lt;p&gt;（&lt;/p&gt;
&lt;p&gt;我是这么干的&lt;/p&gt;
&lt;p&gt;在服务器上的&lt;code&gt;.whatevershrc&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export DISPLAY=localhost:10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在本地用带端口转发的ssh&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh $targetserver -R 6010:localhost:6010&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;另开一个本地终端&lt;/p&gt;
&lt;p&gt;&lt;code&gt;socat tcp-l:6010,fork,reuseaddr tcp:$WINDOWSIP:6010 &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后记得在windows打开你的xserver并设置好监听到10，当然如果你开在别的端口就监听别的，上面也都改成你自己设置的。&lt;/p&gt;
&lt;p&gt;好了我们在服务器试试&lt;code&gt;xeyes&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;今天没带鼠标懒得插图总之我成功了嗯。&lt;/p&gt;
&lt;p&gt;啊你问我为什么一年以前的事情现在发，，，其实是我忍了一年今天才知道为啥出了问题（&lt;/p&gt;
&lt;p&gt;哦中英文互联网世界好像都没有人有这个问题，估计他们没有我这么扭曲的需求吧。&lt;/p&gt;
- https://blog.tpob.xyz/2020/12/11/%E5%9C%A8wsl2%E4%B8%8A%E4%BF%AE%E5%A5%BD%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84x11%E8%BD%AC%E5%8F%91/ - </description>
        </item>
    
    
    
        <item>
        <title>OneDrive app 自动备份的文件整理脚本</title>
        <link>https://blog.tpob.xyz/2020/05/21/onedrive-app-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E7%9A%84%E6%96%87%E4%BB%B6%E6%95%B4%E7%90%86%E8%84%9A%E6%9C%AC/</link>
        <pubDate>Thu, 21 May 2020 21:35:51 +0800</pubDate>
        
        <guid>https://blog.tpob.xyz/2020/05/21/onedrive-app-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E7%9A%84%E6%96%87%E4%BB%B6%E6%95%B4%E7%90%86%E8%84%9A%E6%9C%AC/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2020/05/21/onedrive-app-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E7%9A%84%E6%96%87%E4%BB%B6%E6%95%B4%E7%90%86%E8%84%9A%E6%9C%AC/ -&lt;p&gt;我一直使用移动设备的OneDrive app来对我的照片、录像、屏幕截图等进行备份，但是它会将所有的文件都堆积到同一个文件夹中。时间一长，文件夹中将堆积数以千记的文件，不好查找不说，还会卡死资源管理器。
为了解决这一问题，我找了一些现成的工具如Dropit等，发现都不能满足我的要求；于是我花几分钟写了一个PowerShell脚本放在&lt;a href=&#34;https://gist.github.com/TTTPOB/20859243237c1ba751aee24baf27b689&#34;&gt;gist&lt;/a&gt;上。它的工作流程是先根据文件名判断是截图、录像还是照片，然后根据文件修改时间将其归类到不同的文件夹中。代码十分简单，加之PowerShell脚本十分易读，可以很方便地修改来适合自己的文件名。
效果图 &lt;img src=&#34;https://cdn.jsdelivr.net/gh/TTTPOB/imageHost/20200521213944.png&#34; alt=&#34;效果图&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用方法非常简单，只需要将脚本放在图片目录下右键执行即可。当然，你也可以把脚本加入环境变量然后在终端中执行。
需要注意的是，为了安全，Windows默认是不允许执行ps1脚本文件的，为了解除这一限制，需要以管理员权限打开powershell会话，执行 &lt;code&gt;Set-ExecutionPolicy RemoteSigned&lt;/code&gt;，意为允许运行本地任意脚本和来自网络的已签名脚本。&lt;/p&gt;
- https://blog.tpob.xyz/2020/05/21/onedrive-app-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E7%9A%84%E6%96%87%E4%BB%B6%E6%95%B4%E7%90%86%E8%84%9A%E6%9C%AC/ - </description>
        </item>
    
    
    
        <item>
        <title>如果你想不开想要在公司集群上编译R</title>
        <link>https://blog.tpob.xyz/2018/12/03/%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E4%B8%8D%E5%BC%80%E6%83%B3%E8%A6%81%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%9B%86%E7%BE%A4%E4%B8%8A%E7%BC%96%E8%AF%91r/</link>
        <pubDate>Mon, 03 Dec 2018 23:25:19 +0000</pubDate>
        
        <guid>https://blog.tpob.xyz/2018/12/03/%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E4%B8%8D%E5%BC%80%E6%83%B3%E8%A6%81%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%9B%86%E7%BE%A4%E4%B8%8A%E7%BC%96%E8%AF%91r/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2018/12/03/%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E4%B8%8D%E5%BC%80%E6%83%B3%E8%A6%81%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%9B%86%E7%BE%A4%E4%B8%8A%E7%BC%96%E8%AF%91r/ -&lt;h1 id=&#34;如果你想不开想要在公司集群上编译r&#34;&gt;如果你想不开想要在公司集群上编译R&lt;/h1&gt;
&lt;p&gt;我前两天做了一个让我非常痛苦的决定。&lt;br&gt;
我们公司的集群，IO极差，删anaconda文件夹可能要删三天。&lt;br&gt;
我们公司的集群，为了安全考虑，一般人没有root权限。
我们公司的集群，不光没有root权限，软件和工具链也都完全不全。&lt;br&gt;
所以我选择使用Anaconda当包管理器，但是一旦anaconda内部软件更新，外部依赖这些动态链接库的软件就会集体GG。比如htop、tmux(其实tmux也是我用anaconda装的)和自己装的ssh(为什么要自己装emmm，有缘再讲)。而且我平时用的最多的是R，但是R这个东西编译起来十分蛋疼所以我也用anaconda装了。&lt;br&gt;
但是。&lt;br&gt;
但是，anaconda里面的R版本更新特别慢，包的更新也特别慢，而且anaconda处理依赖的时候有我无法看出规律的诡异升级和降级过程，导致经常装一个新包的时候告诉你R要降级。&lt;/p&gt;
&lt;h2 id=&#34;那就自己编译一个r&#34;&gt;那就自己编译一个R！&lt;/h2&gt;
&lt;p&gt;好的，既然我想自己编译一个R，目的是摆脱anaconda对我的束缚。那我应该build everything from source对不对？好的，从这里开始就掉进坑里了。
公司服务器上预装的gcc是4.4.7版本的，不能满足编译R的需要，我们需要更新gcc。记住，没有包管理器。&lt;/p&gt;
&lt;h2 id=&#34;gcc&#34;&gt;GCC&lt;/h2&gt;
&lt;p&gt;编译gcc的文章网上有很多，这里我们最好选择7.x（因为我用8.x被坑了，8.x有些改动是不向下兼容的，很多包会编译失败）。GCC有三个依赖，同样的，系统上的版本并不能够满足版本要求。三个依赖分别是mpc, mpfr, gmp。如果你有管理员权限请直接用包管理器。。。&lt;/p&gt;
&lt;h2 id=&#34;被io折磨&#34;&gt;被IO折磨&lt;/h2&gt;
&lt;p&gt;我司集群io极差，你不能想象的那种。你按下cd自动补全比手敲还慢。网速也只有1m，总之emmm。好了我们继续。&lt;br&gt;
编译R需要readlines依赖（可选，但我建议你加上，不然用不了方向键）,我是参考这个人的&lt;a href=&#34;https://davetang.org/muse/2018/02/06/compiling-r-gnu-readline/&#34;&gt;文章&lt;/a&gt;进行编译的，他说的很清楚，把我从一个大坑里拉了出来。编译时的&lt;code&gt;LDFLAGS&lt;/code&gt;和&lt;code&gt;CPPFLAGS&lt;/code&gt;如果不写，即使你在别的什么地方指定了readline/ssl/curl，R也是不会认的。（&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;也要写好）
经过无数天的素质三连(&lt;code&gt;../configure blahblah&lt;/code&gt;然后&lt;code&gt;make -j50&lt;/code&gt;然后&lt;code&gt;make install&lt;/code&gt;)我往&lt;code&gt;.zshrc&lt;/code&gt;里加入了两个alias。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;alias pszll&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mkdir build_dir &amp;amp;&amp;amp; cd build_dir&amp;#34;&lt;/span&gt;
alias szll&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;make -j50 &amp;amp;&amp;amp; make install&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;configure&lt;/code&gt;就没写进去了，毕竟那么多参数要改。&lt;br&gt;
好的，由于集群的io问题，我等待了半天(实指)后终于装好了。&lt;br&gt;
加入环境变量，设好&lt;code&gt;R_LIBS_USER&lt;/code&gt;作为自己以后装包的目录(强烈推荐，这样你在自己装的包出问题之后可以毫无负担地删掉这个目录)
看上去没什么问题，我表示可以启动R。&lt;/p&gt;
&lt;h2 id=&#34;坑爹的irkernel&#34;&gt;坑爹的IRkernel&lt;/h2&gt;
&lt;p&gt;由于我最终还是要在Jupyter lab里面使用R的，于是手动安装一个IRkernel。一切正常，直到我发现在jupyter里面执行任何代码都会导致kernel died（&lt;br&gt;
我发现它报的错误是跟x有关，遂查到&lt;a href=&#34;https://github.com/IRkernel/IRkernel/issues/388&#34;&gt;这个issue&lt;/a&gt;，可是我明明是加了&lt;code&gt;--with-x=no&lt;/code&gt;的，实在不知道为什么（&lt;br&gt;
由于时间有限加上我的工作并不是运维。。。所以我最终屈服了，使用了anaconda来安装R（好水啊这个文章图都没有）。
当然我也有隔离我的R的！新开了一个环境里面只有R和R包的依赖，然后在要用到python的时候使用别的环境（你能想象我司辣鸡IO让我浪费了多少生命吗）。&lt;/p&gt;- https://blog.tpob.xyz/2018/12/03/%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%83%B3%E4%B8%8D%E5%BC%80%E6%83%B3%E8%A6%81%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%9B%86%E7%BE%A4%E4%B8%8A%E7%BC%96%E8%AF%91r/ - </description>
        </item>
    
    
    
        <item>
        <title>一个简陋的pubmed摘要爬虫</title>
        <link>https://blog.tpob.xyz/2018/12/02/%E4%B8%80%E4%B8%AA%E7%AE%80%E9%99%8B%E7%9A%84pubmed%E6%91%98%E8%A6%81%E7%88%AC%E8%99%AB/</link>
        <pubDate>Sun, 02 Dec 2018 16:29:35 +0000</pubDate>
        
        <guid>https://blog.tpob.xyz/2018/12/02/%E4%B8%80%E4%B8%AA%E7%AE%80%E9%99%8B%E7%9A%84pubmed%E6%91%98%E8%A6%81%E7%88%AC%E8%99%AB/</guid>
        <description>TPOB&#39;s Dustbin https://blog.tpob.xyz/2018/12/02/%E4%B8%80%E4%B8%AA%E7%AE%80%E9%99%8B%E7%9A%84pubmed%E6%91%98%E8%A6%81%E7%88%AC%E8%99%AB/ -&lt;h1 id=&#34;一个简陋的pubmed摘要爬虫&#34;&gt;一个简陋的pubmed摘要爬虫&lt;/h1&gt;
&lt;p&gt;前段时间被组里布置了一个很烦人的任务，要看很多文献的摘要提取这些研究的结果，我觉得用手点实在是太麻烦了，于是想用爬虫来完成copy摘要的任务。虽然我还不会写爬虫（甚至没怎么写过python），但是都可以学的嘛。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;直接上代码，这个代码非常不pythonic，但是你要考虑到我能用就行的标准不是？：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/home/tpob/miniconda3/bin/python&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; lxml&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; urllib&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; re
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bs4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BeautifulSoup
&lt;span style=&#34;color:#75715e&#34;&gt;# 定义UA， 虽然pubmed好像根本没有反爬虫措施&lt;/span&gt;
headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36&amp;#34;&lt;/span&gt;
}
&lt;span style=&#34;color:#75715e&#34;&gt;# 读进我要查的文献列表，每行一个&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/tpob/paper_list.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; paper_list:
    paper_names&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;paper_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;splitlines()
&lt;span style=&#34;color:#75715e&#34;&gt;# 等一会BeautifulSoup解析出来的元素都是标签，用这个函数方便后面map成plain text&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tag_to_string&lt;/span&gt;(tag):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; tag&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;span style=&#34;color:#75715e&#34;&gt;# 开文件准备往进写&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/tpob/abstracts.md&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; abstracts_file:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# Abstracts of all papers:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; paper_name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; paper_names:
        paper_name_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;term&amp;#34;&lt;/span&gt;:paper_name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;)
        }
        pubmed_request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.ncbi.nlm.nih.gov/pubmed/&amp;#34;&lt;/span&gt;, headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; headers, params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlencode(paper_name_url))
        pubmed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BeautifulSoup(pubmed_request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lxml&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# 下面这句的ref=re.compile......是为了防止跳进comments&lt;/span&gt;
            paper_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pubmed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, href &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^/pubmed/\d+&amp;#34;&lt;/span&gt;), ref&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;citationsensor$&amp;#34;&lt;/span&gt;))[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;]
        &lt;span style=&#34;color:#75715e&#34;&gt;# 这个异常写成这个鬼样子因为我发现如果你查的文献在pubmed上只有一个匹配就会直接跳过去，而不是像下面会得到搜索结果页面，然后再点第一个。所以在这里我就直接跳过下面从搜索结果里找的步骤了。（居然没有报错，真是神奇(其实错了，但是现在是修正过的版本)）&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
            paper_content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pubmed_request
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            paper_content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.ncbi.nlm.nih.gov&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;paper_id)
        paper_content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BeautifulSoup(paper_content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lxml&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#75715e&#34;&gt;# 同样的你可以f12&lt;/span&gt;
        journal_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;paper_content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, href &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;, class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;]
        paper_abstract &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; paper_content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;, class_ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abstr&amp;#39;&lt;/span&gt;)
        pmid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; paper_content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dd&amp;#39;&lt;/span&gt;, text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^\d{8}&amp;#34;&lt;/span&gt;))[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; paper_abstract&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;None:
            abstract_sub_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;paper_abstract&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;h4&amp;#39;&lt;/span&gt;)
            abstract_text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;paper_abstract&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(paper_name)
            abstract_for_human &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            abstract_for_human &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;## &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;paper_content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;h1&amp;#39;&lt;/span&gt;, class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# 我知道这行代码非常不pythonic不要骂我我才刚开始学。。。然后这个的目的是，NCBI上的abstract很多是有小标题的，这样我就把每个小标题分开，得到human readable的abstract&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(abstract_sub_title)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(len(abstract_sub_title)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
                    abstract_for_human&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;### &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;abstract_sub_title[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                    abstract_for_human&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;abstract_text[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;# 当然，也有很多没有小标题，底下那个map就是上面说的把标签转文字的作用啦不然没法join，list又不能直接.text&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                abstract_for_human&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(list(map(tag_to_string ,abstract_text)))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(abstract_for_human&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[PMID:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(pmid)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;](https://www.ncbi.nlm.nih.gov/pubmed/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(pmid)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pmid&amp;#39;&lt;/span&gt;:pmid}, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[Journal: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(journal)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;journal&amp;#39;&lt;/span&gt;:journal_name}, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)

        &lt;span style=&#34;color:#75715e&#34;&gt;# 你说气不气，有的连摘要都没有（后来发现是我错了）&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;## &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; has no abstract!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; paper_name, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[PMID:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(pmid)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;](https://www.ncbi.nlm.nih.gov/pubmed/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(pmid)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pmid&amp;#39;&lt;/span&gt;:pmid}, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[Journal: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(journal)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;journal&amp;#39;&lt;/span&gt;:journal_name}, file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;abstracts_file)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好啦这个简陋的爬虫就这么几行的代码，希望大家给我提一些改进意见加一些新功能比如查影响因子什么的（如果真的有人看的话）。&lt;/p&gt;
- https://blog.tpob.xyz/2018/12/02/%E4%B8%80%E4%B8%AA%E7%AE%80%E9%99%8B%E7%9A%84pubmed%E6%91%98%E8%A6%81%E7%88%AC%E8%99%AB/ - </description>
        </item>
    
    
  </channel>
</rss> 